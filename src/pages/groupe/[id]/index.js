import { useRouter } from 'next/router'
import { getSession, useSession } from "next-auth/react"
import Head from "next/head";
import { useState, useEffect } from 'react';
import Link from 'next/link'
import { Prisma, PrismaClient } from "@prisma/client"


const prisma = new PrismaClient()

export async function getServerSideProps({ query }) {

  const id = query.id;


  const groupe = await prisma.groupe.findUnique({
    where: {
      id: parseInt(id)
    },
    include: {
      notes: true
    }
  });

  const groupeUser = await prisma.GroupeUser.findMany({
    where: {
      id_groupe: parseInt(groupe.id),
    }

  })
  return {
    props: {
      groupe: JSON.parse(JSON.stringify(groupe)),
      groupeUser: JSON.parse(JSON.stringify(groupeUser)),
    }, // will be passed to the page component as props
  }
}

const Groupe = ({ groupe, groupeUser }) => {
  const router = useRouter()
  const { data: session } = useSession();
  const { id } = router.query
  console.log("Session : ", session);


  useEffect(() => {
    var canAccess = false;
    if (session) {
      groupeUser.forEach(groupUser => {
        if (session.user.id == groupUser.id_user) {
          canAccess = true;
        }
      });
      if (!canAccess) {
        router.push("../");
      }
    }
  }, [session])

  const deleteGroupe = async () => {
    console.log("bhdwgsf");
    const response = await fetch(`/api/groupe/${id}`, {
      method: 'DELETE'
    });
    const data = await response.json();
    console.log(data);
    router.push('/');
  }

  return (
    <>
      <Head>
        <title>{groupe && groupe.nom_groupe}</title>
        <meta lang='fr' />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet" />
        <link rel="icon" href="/aaaa.webp" />
      </Head>
      <main>
        <div className="navbar">
          <Link href={`../`} ><button className="sign">Retour</button></Link>
          <h1>{groupe && groupe.nom_groupe}</h1>
          <h3>Remindr</h3>
        </div>
        <p className="description">{groupe && groupe.description_groupe}</p>

        <div>
          {session &&
            (
              <>
                <div className="optionContainer">
                  <Link href={`./${id}/note/CreateNote`}>
                    <button className="option">Cr√©er une note</button>
                  </Link>
                  <Link href={`./${id}/AjouterUser`}>
                    <button className="option">Ajouter un utilisateur</button>
                  </Link>
                </div>
                <div className="noteContainer">
                  {
                    groupe && groupe.notes && groupe.notes.map(note => {

                      const noteElement = document.getElementById(note.id);
                      if (noteElement) {
                        noteElement.style.backgroundColor = note.couleur;
                      }
                      return (
                        <Link href={`./${encodeURIComponent(groupe.id)}/note/${encodeURIComponent(note.id)}`} key={note.id}>
                          <button className="note" id={note.id}> {note.title} </button>
                        </Link>
                      )
                    })
                  }
                </div>


              </>
            )
          }
        </div>
        <button onClick={deleteGroupe} id="deleteGroupe">Supprimer le groupe</button>
      </main>
    </>
  )
}

export default Groupe