import Head from "next/head";
import { useState, useEffect } from 'react';
import axios from "axios";
import { useRouter } from "next/router";
import { Prisma, PrismaClient } from "@prisma/client"
import Link from "next/link";
import { useSession } from "next-auth/react"

const prisma = new PrismaClient()

export async function getServerSideProps({ query }) {
    const id = query.id;

    const users = await prisma.user.findMany(
    );
    
    const userGroupes = await prisma.GroupeUser.findMany();

    const groupe = await prisma.groupe.findUnique({
        where: {
          id: parseInt(id)
        },
      });
    
      const groupeUser = await prisma.GroupeUser.findMany({
        where: {
          id_groupe: parseInt(groupe.id),
        }
    
      })
    return {
        props: {
            users: JSON.parse(JSON.stringify(users)),
            userGroupe: JSON.parse(JSON.stringify(userGroupes)),
            groupeUser: JSON.parse(JSON.stringify(groupeUser))
        },
    }


}


export default function CreateGroupe({ users, userGroupe, groupeUser }) {
    const router = useRouter();
    const { id } = router.query;
    const { data: session } = useSession();


    const verifyUserGroupe = (idUser, groupeId) => {
        const userGroup = userGroupe.find((userGroup) => userGroup.id_user == idUser && userGroup.id_groupe == groupeId )
        return userGroup ? true : false
    }

    const addUserToGroupe = (idUser, groupeId) => {
        const data = { idUser, groupeId};
        axios.post('/api/userGroupe', data)
          .then((response) => {
            console.log(response.data);
          })
          .catch((error) => {
            console.error(error);
          });
       
          router.push(`/groupe/${id}/`);
    }

    useEffect(() => {
        var canAccess = false;
        if (session && groupeUser) {
            groupeUser.forEach(groupUser => {
                if (session.user.id == groupUser.id_user) {
                  canAccess = true;
                }
              });
              if (!canAccess) {
                router.push("/");
              }
        }
    }, [session])

    return (
        <>
            <Head>
                <title>Créer un groupe utilisateur</title>
                <meta lang='fr' />
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin />
                <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet"></link>
                <link rel="icon" href="/aaaa.webp" />
            </Head>

            <main>
                <div className="navbar">
                    <Link href={`/groupe/${id}`}><button className="sign">Retour</button></Link>
                    <h1>Ajouter un utilisateur</h1>
                    <h3>Remindr</h3>
                </div>
                <div className="users-grid">
                    {users && users.map(user => {
                        return (
                        <div key={user.id}>
                            <div className="userItem">
                                <img src={user.image} alt={user.name} />
                                <h2>{user.name}</h2>
                                <h3>{user.email}</h3>

                                {verifyUserGroupe(user.id, id) ? (
                                    <button type="button" className="sign" disabled> Déja dans le groupe</button>
                                ) : (
                                    <button type="button" className="sign" onClick={() =>  addUserToGroupe(user.id, id)} > ajouter au groupe</button>
                                )
                                }
                            </div>
                        </div> )
                    })
                    }
                </div>
            </main>
        </>
    );
}