import Head from "next/head";
import { useEffect, useState } from 'react';
import axios from "axios";
import Link from 'next/link'
import { useRouter } from "next/router";
import { useSession } from "next-auth/react"

export async function getServerSideProps({ query }) {
    const id = query.idNote;
    const note = await prisma.note.findUnique({
        where: {
            id: parseInt(id)
        }
    }
    );
    const groupe = await prisma.groupe.findUnique({
        where: {
          id: parseInt(note.id_Groupe),
        },
      });
    
      const groupeUser = await prisma.GroupeUser.findMany({
        where: {
          id_groupe: parseInt(groupe.id),
        }
    
      })
    return {
        props: {
            note: JSON.parse(JSON.stringify(note)),
            groupeUser: JSON.parse(JSON.stringify(groupeUser)),
        },
    }
}

export default function CreateGroupe({ note, groupeUser }) {
    const [title, setTitle] = useState('');
    const [content, setContent] = useState('');
    const [dateT, setDateTime] = useState('');
    const [colorHex, setColor] = useState('')
    const { data: session } = useSession();
    const router = useRouter()
    const { id, idNote } = router.query

    useEffect(() => {
        setTitle(note.title);
        setContent(note.content);
        setDateTime(note.date);
        setColor(note.couleur);

    }, [])

    useEffect(() => {
        var canAccess = false;
        if (session) {
            groupeUser.forEach(groupUser => {
                if (session.user.id == groupUser.id_user) {
                  canAccess = true;
                }
              });
              if (!canAccess) {
                router.push("/");
              }
        }
    }, [session])


    const handleSubmit = (event) => {
        event.preventDefault();
            const data = { title, content, dateT, colorHex, id };
            axios.put(`/api/note/${idNote}`, data)
                .then((response) => {
                    console.log(response.data);
                })
                .catch((error) => {
                    console.error(error);
                });

            router.push(`/groupe/${id}/`);

    }
    return (
        <>
            <Head>
                <title>Modifier une note</title>
                <meta lang='fr' />
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
                <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet"></link>
                <link rel="icon" href="/aaaa.webp" />
            </Head>

            <main>
                <div className="navbar">
                    <Link href={`/groupe/${id}`}><button className="sign">Retour</button></Link>
                    <h1>Modifier un Remindr</h1>
                    <h3>Remindr</h3>
                </div>
                <div className="formContainer">
                <form onSubmit={handleSubmit}>
                    <input type="text" value={title} className="NameInput" placeholder="Titre de votre Remindr" onChange={(e) => setTitle(e.target.value)}></input>
                    <textarea value={content} className="DescInput" placeholder="Description de votre Remindr" onChange={(e) => setContent(e.target.value)}></textarea>
                    <input value={dateT} type="datetime-local" className="DateInput" onChange={(e) => setDateTime(e.target.value)}></input>
                    <input value={colorHex} type="color" list="presetColors" className="ColorInput" onChange={(e) => setColor(e.target.value)} /><datalist id="presetColors"><option>#E02121</option><option>#2151DC</option><option>#24D53C</option></datalist>
                    <button type="submit" className="sign">Cr√©er</button>
                </form>
                </div>
            </main>
        </>
    )
}