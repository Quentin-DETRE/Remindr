import { useRouter } from 'next/router'
import { useSession } from "next-auth/react"
import Head from "next/head";
import { useState, useEffect } from 'react';
import Link from 'next/link'

export async function getServerSideProps({ query }) {

    const id = query.id;
    
  
    const groupe = await prisma.groupe.findUnique({
      where: {
        id: parseInt(id)
      },
    });
  
    const groupeUser = await prisma.GroupeUser.findMany({
      where: {
        id_groupe: parseInt(groupe.id),
      }
  
    })
    return {
      props: {
        groupeUser: JSON.parse(JSON.stringify(groupeUser)),
      }, // will be passed to the page component as props
    }
  }

const Note = ({groupeUser}) => {
    const router = useRouter()
    const { data: session } = useSession();
    const { id, idNote } = router.query
    const [note, setNote] = useState([]);

    const getNote = async () => {
        const response = await fetch(`/api/note/${idNote}`);
        const data = await response.json()
        return data.note;
    }

    const deleteNote = async () => {
        const response = await fetch(`/api/note/${idNote}`, {
            method: 'DELETE'
        });
        const data = await response.json();
    }



    useEffect(() => {
        if (id && idNote) {
            getNote().then(note => {
                setNote(note);
            })
        }


    }, [id, idNote])

    useEffect(() => {
        var canAccess = false;
        if (session) {
            groupeUser.forEach(groupUser => {
                if (session.user.id == groupUser.id_user) {
                  canAccess = true;
                }
              });
              if (!canAccess) {
                router.push("/");
              }
        }
    }, [session])

    return (
        <>
            <Head>
                <title>{note.title}</title>
                <meta lang='fr' />
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
                <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet" />
                <link rel="icon" href="/aaaa.webp" />
            </Head>
            <main>
                <div className="navbar">
                    <Link href={`/groupe/${id}`}><button className="sign">Retour</button></Link>
                    <h1>{note.title}</h1>
                    <h3>Remindr</h3>
                </div>
                <p className="description">{note.content}</p>
                <p className="description">Aura lieu ce jour : {new Date(note.date).toLocaleString('fr-FR', {hour12:false})}</p>
                <div className="optionContainer">
                    <Link href={`/groupe/${id}`}><button onClick={deleteNote} className="option" id="suppr">Supprimer le Remindr</button></Link>
                    <Link href={`/groupe/${id}/note/${idNote}/ModifierNote`}><button className="option">Modifier le Remindr</button></Link>
                </div>
            </main>
        </>
    )
}

export default Note