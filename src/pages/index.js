import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import { signIn, signOut, useSession, SessionProvider } from "next-auth/react"
import Link from 'next/link'


const inter = Inter({ subsets: ['latin'] })


export default function Home() {
  const { data: session } = useSession();
  const [groupes, setGroupes] = useState([]);
  const router = useRouter();


  const getGroupes = async () => {
    const response = await fetch('/api/groupe')
    const data = await response.json()
    return data.groupe || [];
  }

  const getGroupesUsers = async () => {
    const response = await fetch('/api/userGroupe')
    const data = await response.json()
    console.log(data);
    return data.userGroup || [];
  }

  useEffect(() => {
    // Récupérer les groupes de l'utilisateur depuis la table intermédiaire
    if (session) {
      getGroupesUsers().then((groupUsers) => {
        // Créer un tableau contenant uniquement les IDs des groupes auxquels l'utilisateur appartient
        const userGroupIds = groupUsers.filter((groupUser) => groupUser.id_user === session.user.id).map((groupUser) => groupUser.id_groupe);
        // Récupérer tous les groupes
        getGroupes().then((groups) => {
          // Filtrer les groupes pour n'afficher que ceux auxquels l'utilisateur appartient
          const filteredGroups = groups.filter((group) => userGroupIds.includes(group.id));
          setGroupes(filteredGroups);
        });

      });

      if (!session) {
        router.push("/");
      }
    }
  }, [session]);

  return (
    <>

      <Head>
        <title>Remindr</title>
        <meta lang='fr' />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet" />
        <link rel="icon" href="/aaaa.webp" />
      </Head>
      <main>
        <header>
          <div className="navbar">
            <div id="pdpContainer">
              {session &&
                (
                  <>
                    <img id="pdp" src={session.user.image} />
                  </>
                )
              }
            </div>
            <h1>Remindr</h1>
            {!session &&
              (
                <>
                  <Link href={"./api/auth/signin"} onClick={() => {
                    e.preventDefault()
                    signIn()
                  }} ><button className="sign">Sign in</button></Link>
                </>
              )
            }
            {session &&
              (
                <>
                  <Link href={"./api/auth/signout"} onClick={(e) => {
                    e.preventDefault()
                    signOut()
                  }}><button className="sign">Sign Out</button></Link>
                </>
              )
            }
          </div>
        </header>
        {!session &&
          (
            <>
              <div id="IntroContainer">
                <h1>Bienvenue sur Remindr !</h1>
                <h3>Une application web qui permet de créer des groupes et d'y ajouter des Remindr, pour que vous et vos contacts s'en souvienne !<br /> Vous pouvez commencer à ajouter vos Remindr en vous connectant dès maintenant !</h3>
              </div>
            </>
          )
        }
        <div id="Welcome">
          {session &&
            (
              <>
                <h1>Bienvenue {session.user.name}</h1>
                <h2>Vos groupes :</h2>
              </>
            )
          }
        </div>

        <div id="groupeContainer">

          {session &&
            (
              <>
                <Link href="groupe/CreateGroupe">
                  <button className="groupe">Créer un groupe</button>
                </Link>
                {
                  groupes.map(groupe => {
                    return (
                      <Link href={`groupe/${encodeURIComponent(groupe.id)}`} key={groupe.id}>
                        <button className="groupe"> {groupe.nom_groupe} </button>
                      </Link>
                    )
                  })
                }
              </>
            )
          }
        </div>
      </main>
    </>
  )
}
